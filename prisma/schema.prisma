// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  points        Int?      @default(0)
  raffles       Raffle[]
  Order         Order[]

  @@map("users")
}

model Csv {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  raffle   Raffle @relation(fields: [raffleId], references: [id])
  raffleId String @unique @db.ObjectId
  url      String

  @@map("csv")
}

model Kv {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  raffle   Raffle @relation(fields: [raffleId], references: [id])
  raffleId String @unique @db.ObjectId
  url      String

  @@map("kv")
}

model Prize {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  raffle   Raffle @relation(fields: [raffleId], references: [id])
  raffleId String
  url      String
  name     String
  number   String

  @@map("prize")
}

model Raffle {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now()) @map("created_at")
  draft       Boolean  @default(false)
  url         String?
  csv         Csv?
  kv          Kv?
  prizePhotos Prize[]
  name        String?
  info        String?
}

type OrderItem {
  id       String @map("_id") @db.ObjectId
  name     String
  price    Int
  quantity Int
}

type Address {
  street  String
  city    String
  zip     String
  country String
  state   String
}

enum Gender {
  Men
  Women
}

model Order {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")
  userId         String      @map("user_id")
  user           User        @relation(fields: [userId], references: [id])
  items          OrderItem[]
  amount         Float
  shippingAmount Float?      @map("shipping_amount")
}
